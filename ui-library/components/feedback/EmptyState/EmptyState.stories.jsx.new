import React from 'react';
import EmptyState from './EmptyState';

export default {
  title: 'Framework/EmptyState',
  component: EmptyState,
  parameters: {
    layout: 'padded',
  },
  argTypes: {
    size: {
      control: { type: 'select', options: ['sm', 'md', 'lg'] },
    },
    variant: {
      control: { type: 'select', options: ['default', 'notice', 'warning', 'success', 'danger'] },
    },
  },
  tags: ['autodocs'],
};

const Template = (args) => <EmptyState {...args} />;

// Common icons
const FolderIcon = () => (
  <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="w-6 h-6">
    <path strokeLinecap="round" strokeLinejoin="round" d="M2.25 12.75V12A2.25 2.25 0 014.5 9.75h15A2.25 2.25 0 0121.75 12v.75m-8.69-6.44l-2.12-2.12a1.5 1.5 0 00-1.061-.44H4.5A2.25 2.25 0 002.25 6v12a2.25 2.25 0 002.25 2.25h15A2.25 2.25 0 0021.75 18V9a2.25 2.25 0 00-2.25-2.25h-5.379a1.5 1.5 0 01-1.06-.44z" />
  </svg>
);

const SearchIcon = () => (
  <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="w-6 h-6">
    <path strokeLinecap="round" strokeLinejoin="round" d="M21 21l-5.197-5.197m0 0A7.5 7.5 0 105.196 5.196a7.5 7.5 0 0010.607 10.607z" />
  </svg>
);

const DocumentIcon = () => (
  <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="w-6 h-6">
    <path strokeLinecap="round" strokeLinejoin="round" d="M19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m2.25 0H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9z" />
  </svg>
);

const AddIcon = () => (
  <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" strokeWidth={1.5} stroke="currentColor" className="w-6 h-6">
    <path strokeLinecap="round" strokeLinejoin="round" d="M12 4.5v15m7.5-7.5h-15" />
  </svg>
);

// Simple illustration component
const SimpleIllustration = () => (
  <div className="w-32 h-32 mx-auto rounded-full bg-blue-100 dark:bg-blue-900/20 flex items-center justify-center">
    <svg 
      xmlns="http://www.w3.org/2000/svg" 
      width="80" 
      height="80" 
      viewBox="0 0 24 24" 
      fill="none" 
      stroke="currentColor" 
      strokeWidth="2" 
      strokeLinecap="round" 
      strokeLinejoin="round" 
      className="text-blue-500"
    >
      <rect x="3" y="3" width="18" height="18" rx="2" ry="2"></rect>
      <line x1="8" y1="12" x2="16" y2="12"></line>
      <line x1="12" y1="8" x2="12" y2="16"></line>
    </svg>
  </div>
);

export const Default = Template.bind({});
Default.args = {
  title: 'No items found',
  description: 'Add your first item to get started with this collection.',
  icon: <FolderIcon />,
  action: {
    label: 'Add item',
    onClick: () => console.log('Add item clicked'),
    variant: 'primary',
    icon: <AddIcon />,
  },
};

export const FilteredResults = Template.bind({});
FilteredResults.args = {
  title: 'No matching results',
  description: 'Try adjusting your search or filter criteria to find what you\'re looking for.',
  icon: <SearchIcon />,
  action: {
    label: 'Clear filters',
    onClick: () => console.log('Clear filters clicked'),
  },
  secondaryAction: {
    label: 'New search',
    onClick: () => console.log('New search clicked'),
  },
};

export const NoResults = Template.bind({});
NoResults.args = {
  title: 'No search results',
  description: 'We couldn\'t find anything with that term. Try searching for something else.',
  icon: <SearchIcon />,
  action: {
    label: 'Clear search',
    onClick: () => console.log('Clear search clicked'),
  },
};

export const SmallSize = Template.bind({});
SmallSize.args = {
  title: 'No documents',
  description: 'Get started by creating your first document.',
  icon: <DocumentIcon />,
  size: 'sm',
  action: {
    label: 'Create',
    onClick: () => console.log('Create clicked'),
    variant: 'primary',
  },
};

export const LargeSize = Template.bind({});
LargeSize.args = {
  title: 'Your inbox is empty',
  description: 'Way to go! You\'ve completed all your tasks and your inbox is now empty.',
  illustration: <SimpleIllustration />,
  size: 'lg',
  action: {
    label: 'Go to dashboard',
    onClick: () => console.log('Go to dashboard clicked'),
  },
};

export const NoticeVariant = Template.bind({});
NoticeVariant.args = {
  title: 'Something to note',
  description: 'Please be aware of this important information that requires your attention.',
  icon: <DocumentIcon />,
  variant: 'notice',
  action: {
    label: 'Acknowledge',
    onClick: () => console.log('Acknowledge clicked'),
    variant: 'primary',
  },
};

export const WarningVariant = Template.bind({});
WarningVariant.args = {
  title: 'Update required',
  description: 'Your software needs to be updated for security purposes.',
  icon: <DocumentIcon />,
  variant: 'warning',
  action: {
    label: 'Update now',
    onClick: () => console.log('Update now clicked'),
    variant: 'primary',
  },
  secondaryAction: {
    label: 'Learn more',
    onClick: () => console.log('Learn more clicked'),
  },
};

export const SuccessVariant = Template.bind({});
SuccessVariant.args = {
  title: 'Operation completed',
  description: 'Your task has been completed successfully! No further action is needed.',
  icon: <DocumentIcon />,
  variant: 'success',
  action: {
    label: 'Continue',
    onClick: () => console.log('Continue clicked'),
    variant: 'primary',
  },
};

export const DangerVariant = Template.bind({});
DangerVariant.args = {
  title: 'Access denied',
  description: 'You don\'t have permission to view this content. Contact an administrator for access.',
  icon: <FolderIcon />,
  variant: 'danger',
  action: {
    label: 'Request access',
    onClick: () => console.log('Request access clicked'),
    variant: 'primary',
  },
  secondaryAction: {
    label: 'Go back',
    onClick: () => console.log('Go back clicked'),
  },
};
